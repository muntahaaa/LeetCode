//Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
You must write an algorithm with O(log n) runtime complexity.
Example 1:
Input: nums = [1,3,5,6], target = 5
Output: 2
//

class Solution {
    public int searchInsert(int[] nums, int target) {
       int left = 0;
        int right = nums.length - 1;
        int count = -1;

        while (left <= right) {
            int mid = left + (right - left) / 2;

            if (nums[mid] == target) {
                return mid; // Target found
            } else if (nums[mid] < target) {
                left = mid + 1;
            } else {
                count = mid; // Update count when current element is greater than target
                right = mid - 1;
            }
        }

        return (count == -1) ? left : count;
    }
}
